xbe name=vsi_3ph_1 evaluate=yes
Jacobian: variable
input_vars: g1 g2 g3 g4 g5 g6
output_vars: va vb vc
aux_vars:
iparms:
sparms:
rparms:
+  vdc=10
+  L=1
+  Lby2=0
stparms:
igparms:
outparms: va vb vc g1 g2 g3 g4 g5 g6
n_f= 0
n_g= 3
g_1: va
g_2: vb
g_3: vc
C:
prototypes:
variables:
   double val_a,val_b,val_c;
source:
   if (G.flags[G.i_one_time_parms]) {
     L = X.rprm[nr_L];
     Lby2 = 0.5*L;
     X.rprm[nr_Lby2] = Lby2;
     return;
   }

   g1 = X.val_vr[nvr_g1];
   g2 = X.val_vr[nvr_g2];
   g3 = X.val_vr[nvr_g3];
   g4 = X.val_vr[nvr_g4];
   g5 = X.val_vr[nvr_g5];
   g6 = X.val_vr[nvr_g6];

   vdc = X.rprm[nr_vdc];
   Lby2 = X.rprm[nr_Lby2];

   if (g1 > Lby2) {
     if (g4 > Lby2) {
//     val_a = 0.5*vdc;
       val_a = 0.0;
     } else {
//     val_a = vdc;
       val_a = 0.5*vdc;
     }
   } else {
     if (g4 > Lby2) {
//     val_a = 0.0;
       val_a = -0.5*vdc;
     } else {
//     val_a = 0.5*vdc;
       val_a = 0.0;
     }
   }
   if (g3 > Lby2) {
     if (g6 > Lby2) {
//     val_b = 0.5*vdc;
       val_b = 0.0;
     } else {
//     val_b = vdc;
       val_b = 0.5*vdc;
     }
   } else {
     if (g6 > Lby2) {
//     val_b = 0.0;
       val_b = -0.5*vdc;
     } else {
//     val_b = 0.5*vdc;
       val_b = 0.0;
     }
   }
   if (g5 > Lby2) {
     if (g2 > Lby2) {
//     val_c = 0.5*vdc;
       val_c = 0.0;
     } else {
//     val_c = vdc;
       val_c = 0.5*vdc;
     }
   } else {
     if (g2 > Lby2) {
//     val_c = 0.0;
       val_c = -0.5*vdc;
     } else {
//     val_c = 0.5*vdc;
       val_c = 0.0;
     }
   }

   if (G.flags[G.i_init_guess]) {
     X.val_vr[nvr_va] = val_a;
     X.val_vr[nvr_vb] = val_b;
     X.val_vr[nvr_vc] = val_c;
     return;
   }
   if (G.flags[G.i_trns] || G.flags[G.i_startup]) {
     if (G.flags[G.i_explicit]) {
       X.val_vr[nvr_va] = val_a;
       X.val_vr[nvr_vb] = val_b;
       X.val_vr[nvr_vc] = val_c;
     } else if (G.flags[G.i_implicit]) {
       if (G.flags[G.i_function]) {
         X.g[ng_1] = X.val_vr[nvr_va] - val_a;
         X.g[ng_2] = X.val_vr[nvr_vb] - val_b;
         X.g[ng_3] = X.val_vr[nvr_vc] - val_c;
       }
       if (G.flags[G.i_jacobian]) {
         J.dgdvr[ng_1][nvr_va] = 1.0;
         J.dgdvr[ng_2][nvr_vb] = 1.0;
         J.dgdvr[ng_3][nvr_vc] = 1.0;
       }
     }
     return;
   }
   if (G.flags[G.i_outvar]) {
     X.outprm[no_va] = X.val_vr[nvr_va];
     X.outprm[no_vb] = X.val_vr[nvr_vb];
     X.outprm[no_vc] = X.val_vr[nvr_vc];
     X.outprm[no_g1] = X.val_vr[nvr_g1];
     X.outprm[no_g2] = X.val_vr[nvr_g2];
     X.outprm[no_g3] = X.val_vr[nvr_g3];
     X.outprm[no_g4] = X.val_vr[nvr_g4];
     X.outprm[no_g5] = X.val_vr[nvr_g5];
     X.outprm[no_g6] = X.val_vr[nvr_g6];
     return;
   }
endC
endxbe
