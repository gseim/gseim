xbe name=sum_4 evaluate=yes
# y = k1*x1 + k2*x2 + ... + k4*x4
Jacobian: constant
input_vars: x1 x2 x3 x4
output_vars: y
aux_vars:
iparms:
sparms:
rparms:
+  k1=1 k2=1 k3=1 k4=1
stparms:
igparms:
outparms: x1 x2 x3 x4 y
n_f= 0
n_g= 1
g_1: x1 x2 x3 x4 y
C:
prototypes:
variables:
source:
   k1 = X.rprm[nr_k1];
   k2 = X.rprm[nr_k2];
   k3 = X.rprm[nr_k3];
   k4 = X.rprm[nr_k4];

   if (G.flags[G.i_init_guess]) {
     X.val_vr[nvr_y] =
        k1*X.val_vr[nvr_x1]
      + k2*X.val_vr[nvr_x2]
      + k3*X.val_vr[nvr_x3]
      + k4*X.val_vr[nvr_x4];
     return;
   }
   if (G.flags[G.i_trns] || G.flags[G.i_startup]) {
     if (G.flags[G.i_explicit]) {
       X.val_vr[nvr_y] =
          k1*X.val_vr[nvr_x1]
        + k2*X.val_vr[nvr_x2]
        + k3*X.val_vr[nvr_x3]
        + k4*X.val_vr[nvr_x4];
     } else if (G.flags[G.i_implicit]) {
       if (G.flags[G.i_function]) {
         X.g[ng_1] = X.val_vr[nvr_y]
            - k1*X.val_vr[nvr_x1]
            - k2*X.val_vr[nvr_x2]
            - k3*X.val_vr[nvr_x3]
            - k4*X.val_vr[nvr_x4];
       }
       if (G.flags[G.i_jacobian]) {
         J.dgdvr[ng_1][nvr_y ] =  1.0;
         J.dgdvr[ng_1][nvr_x1] = -k1;
         J.dgdvr[ng_1][nvr_x2] = -k2;
         J.dgdvr[ng_1][nvr_x3] = -k3;
         J.dgdvr[ng_1][nvr_x4] = -k4;
       }
     }
     return;
   }
   if (G.flags[G.i_outvar]) {
     X.outprm[no_x1] = X.val_vr[nvr_x1];
     X.outprm[no_x2] = X.val_vr[nvr_x2];
     X.outprm[no_x3] = X.val_vr[nvr_x3];
     X.outprm[no_x4] = X.val_vr[nvr_x4];
     X.outprm[no_y ] = X.val_vr[nvr_y ];
     return;
   }
endC
endxbe
