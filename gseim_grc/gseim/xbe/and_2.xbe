# Copyright (C) 2022 - Mahesh Patil <mbpatil@ee.iitb.ac.in>
# This file is part of GSEIM.
#
# GSEIM is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <https://www.gnu.org/licenses/>.
#
xbe name=and_2 evaluate=yes
Jacobian: variable
input_vars: x1 x2
output_vars: y
aux_vars:
iparms:
sparms:
rparms: y_high=1 hb2=0
stparms:
igparms:
outparms: x1 x2 y
n_f= 0
n_g= 1
g_1: y
C:
prototypes:
variables:
   double y0;
   bool X1,X2,Y;
source:
   if (G.flags[G.i_one_time_parms]) {
     y_high = X.rprm[nr_y_high];
     hb2 = 0.5*y_high;
     X.rprm[nr_hb2] = hb2;
     return;
   }
   if (G.flags[G.i_outvar]) {
     X.outprm[no_x1] = X.val_vr[nvr_x1];
     X.outprm[no_x2] = X.val_vr[nvr_x2];
     X.outprm[no_y ] = X.val_vr[nvr_y ];
     return;
   }
   y_high = X.rprm[nr_y_high];
   hb2 = X.rprm[nr_hb2];

   x1 = X.val_vr[nvr_x1];
   x2 = X.val_vr[nvr_x2];
   X1 = x1 > hb2;
   X2 = x2 > hb2;
   Y = X1 && X2;

   if (Y) {
     y0 = y_high;
   } else {
     y0 = 0.0;
   }

   if (G.flags[G.i_init_guess]) {
     X.val_vr[nvr_y] = y0;
     return;
   }
   if (G.flags[G.i_trns] || G.flags[G.i_startup]) {
     if (G.flags[G.i_explicit]) {
       X.val_vr[nvr_y] = y0;
     } else if (G.flags[G.i_implicit]) {
       if (G.flags[G.i_function]) {
         X.g[ng_1] = X.val_vr[nvr_y] - y0;
       }
       if (G.flags[G.i_jacobian]) {
         J.dgdvr[ng_1][nvr_y ] =  1.0;
       }
     }
     return;
   }
endC
endxbe
